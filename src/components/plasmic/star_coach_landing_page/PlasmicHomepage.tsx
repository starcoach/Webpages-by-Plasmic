// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8kqtySnL71cyFF3GhKk7Hd
// Component: cKA_PHiPsB8

import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: aytpbToFSGjM/component
import Button from "../../Button"; // plasmic-import: mx21GcmJtoKJ/component
import SignUpPrompt from "../../SignUpPrompt"; // plasmic-import: l9A5H_zFyiQW/component
import Section from "../../Section"; // plasmic-import: ZxwF6LtUf7wI/component
import ValueProp from "../../ValueProp"; // plasmic-import: MiGWel9QVODR/component
import ListItem from "../../ListItem"; // plasmic-import: J3Alq2PBGCQL/component
import PriceCard from "../../PriceCard"; // plasmic-import: 5YpR8aD8yRxn/component
import Banner from "../../Banner"; // plasmic-import: 4U_rZkwsk640/component
import Testimonial from "../../Testimonial"; // plasmic-import: 6J30jWDoE4D2/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: C9EsJLJf4pfn/component
import FooterSection from "../../FooterSection"; // plasmic-import: E2kIqFsnHYPs/component

import { useScreenVariants as useScreenVariantscahMfBb9YIj2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: cahMFBb9yIJ2/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_star_coach_landing_page.module.css"; // plasmic-import: 8kqtySnL71cyFF3GhKk7Hd/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: cKA_PHiPsB8/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: dmMF3tC38IpI/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: aTmAijt1ascz/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: 78m0p5dnVM5S/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: VEenXaHmkGY-/icon
import sunglassesMalePSac31GJqn from "./images/sunglassesMale.jpg"; // plasmic-import: -pSac31g_Jqn/picture
import sneakersUmDead0NoOka from "./images/sneakers.jpg"; // plasmic-import: UMDead0NoOKA/picture
import shirtWoman3YnJbWpxEzL from "./images/shirtWoman.png"; // plasmic-import: -3ynJBWpxEzL/picture
import loomPsWcmqGSzqPo from "./images/loom.svg"; // plasmic-import: psWcmqGSzqPo/picture
import strapiYJ6AhZetDe4I from "./images/strapi.svg"; // plasmic-import: yJ6AhZetDe4i/picture
import segmentVFaiqnQ2Lezp from "./images/segment.svg"; // plasmic-import: VFaiqnQ2lezp/picture
import xstateWSdK4O0Vyr7G from "./images/xstate.svg"; // plasmic-import: wSdK4O0Vyr7G/picture
import mapboxQJ6T6Op9Vp from "./images/mapbox.svg"; // plasmic-import: Q-j6t6op9Vp_/picture
import tracyBJsx85Sjv1Sz from "./images/tracy.png"; // plasmic-import: BJsx85sjv1SZ/picture
import elaineB1QDr7KvUtmZ from "./images/elaine.png"; // plasmic-import: B1QDr7kvUtmZ/picture
import louis73UP9Acqub1S from "./images/louis.jpg"; // plasmic-import: 73uP9acqub1s/picture
import meetingLCnVq1RadFw from "./images/meeting.jpg"; // plasmic-import: LCn_vq1RADFw/picture

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  h3?: p.Flex<"h3">;
  signUpPrompt?: p.Flex<typeof SignUpPrompt>;
  valuePropsSection?: p.Flex<typeof Section>;
  checkpointsSection?: p.Flex<typeof Section>;
  pricingSection?: p.Flex<typeof Section>;
  shopBannersSection?: p.Flex<typeof Section>;
  logoCloudSection?: p.Flex<typeof Section>;
  testimonialsSection?: p.Flex<typeof Section>;
  callToActionSection?: p.Flex<typeof CallToActionSection>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantscahMfBb9YIj2()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___53Xl)}
            >
              <div className={classNames(projectcss.all, sty.column___2Y3Xd)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tCnIe)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gknN)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bFxao)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0Tc2R
                        )}
                      >
                        {"Updated!"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bqoi9
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__aYbjO
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#F40000" }}
                              >
                                {"StarCoach"}
                              </span>
                            </React.Fragment>
                          </h2>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nqDdq
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h3
                            data-plasmic-name={"h3"}
                            data-plasmic-override={overrides.h3}
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700, color: "#FFFFFF" }}
                              >
                                {"Your Personal Language Coach"}
                              </span>
                            </React.Fragment>
                          </h3>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__g28Us)}
                  >
                    {true ? (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__gL7Wo
                        )}
                        color={"darkGray" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__a9Tph
                            )}
                            role={"img"}
                          />
                        }
                        showEndIcon={true}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eIboz
                          )}
                        >
                          {"Join For Free"}
                        </div>
                      </Button>
                    ) : null}
                    {true ? (
                      <Button
                        bgDifference={true}
                        className={classNames(
                          "__wab_instance",
                          sty.button__fuHfW
                        )}
                        color={"darkGray" as const}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d1B6S
                          )}
                        >
                          {"Learn more\u2026"}
                        </div>
                      </Button>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__xVEsm)}>
                <SignUpPrompt
                  data-plasmic-name={"signUpPrompt"}
                  data-plasmic-override={overrides.signUpPrompt}
                  className={classNames("__wab_instance", sty.signUpPrompt)}
                />
              </div>
            </p.Stack>
          </p.Stack>
          <Section
            data-plasmic-name={"valuePropsSection"}
            data-plasmic-override={overrides.valuePropsSection}
            className={classNames("__wab_instance", sty.valuePropsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bZrNp)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__tky1D)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__tddVw
                  )}
                >
                  {"Your Personal Language Coach"}
                </h2>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wGtlD
                )}
              >
                {
                  "StarCoach is a holistic language learning system personally designed for you..... a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                }
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pHe6)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cIch0)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__g7JQ)}
                  description={
                    "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__xxYO)}
                      role={"img"}
                    />
                  }
                  title={"Powerful"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__wg4SS)}
                  description={
                    "Consequat scelerisque a eros taciti nisl a sodales."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__bCGu5)}
                      role={"img"}
                    />
                  }
                  title={"Faster"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__r625J)}
                  description={"At ut condimentum amet adipiscing ac diam a."}
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__t5Coi)}
                      role={"img"}
                    />
                  }
                  title={"Best and brightest"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__dKtUg)}
                  description={
                    "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__cgfTn)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jjN1Y
                      )}
                    >
                      {"Dynamic range"}
                    </div>
                  }
                />
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xph96)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__g7B8K)}
                  description={
                    "Commodo pretium himenaeos nisi potenti ad in ante."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__xrReh)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eiA
                      )}
                    >
                      {"Portable"}
                    </div>
                  }
                />

                <ValueProp
                  className={classNames(
                    "__wab_instance",
                    sty.valueProp___0R1Op
                  )}
                  description={
                    "Magna ullamcorper ut arcu nisi a per facilisis."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__mTcG)}
                      role={"img"}
                    />
                  }
                  title={"Production-ready"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__kuedT)}
                  description={
                    "Ac lobortis praesent sagittis dictumst fermentum vestibulum nunc."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__def4U)}
                      role={"img"}
                    />
                  }
                  title={"Magical"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__pVoZ)}
                  description={
                    "A parturient mi suspendisse nisl inceptos nullam a."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__rOrGg)}
                      role={"img"}
                    />
                  }
                  title={"Accessible"}
                />
              </p.Stack>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"checkpointsSection"}
            data-plasmic-override={overrides.checkpointsSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.checkpointsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__zPtyJ)}
              id={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("features" as const)
                  : ("features" as const)
              }
            >
              <div className={classNames(projectcss.all, sty.column__eax65)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ylwXe)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mxeRw
                    )}
                  >
                    {"Freedoms"}
                  </div>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__lj2Xu
                    )}
                  >
                    {"Open by design"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ugSPp
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__j8Os)}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__vcHcH)}
                        role={"img"}
                      />
                    }
                    flat={true}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0QClF
                      )}
                    >
                      {"Learn more"}
                    </div>
                  </Button>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__labiV)}>
                <div className={classNames(projectcss.all, sty.freeBox__bnIEc)}>
                  <ListItem
                    bottomBorder={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("dark" as const)
                        : ("dark" as const)
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__wyN9W
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__oyLIn)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5UcbA
                      )}
                    >
                      {"Built on capability"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___9NEdp
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__k9ORl)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0MM8E
                      )}
                    >
                      {"Highly energetic"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__sJnP9
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__g3UN)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wgRsr
                      )}
                    >
                      {"100% transparency and accountability"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__kf3Jt
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__jCjF)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lNdXn
                      )}
                    >
                      {"Refreshing clarity"}
                    </div>
                  </ListItem>
                  <ListItem
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__eLyHq
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__z02Nu)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vO9Zp
                      )}
                    >
                      {"Modern results"}
                    </div>
                  </ListItem>
                </div>
              </div>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__czquL)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mzdds)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__sG3)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uzEmO
                    )}
                  >
                    {"Pricing plans"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__o7I51
                  )}
                >
                  {
                    "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                  }
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__giqjt)}
              >
                <div className={classNames(projectcss.all, sty.column___2EgRv)}>
                  <PriceCard
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatRight"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___8WRej
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__q8PSp
                          )}
                          description={
                            "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vRLxi
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__fb5HC
                          )}
                          description={"Mus consequat a justo"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__padnx
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column___5ZiP6)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8GYg
                        )}
                      >
                        {"Buy pro"}
                      </div>
                    }
                    borders={[]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__s7Tt3
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__oUEwE
                          )}
                          description={
                            "Ligula primis mollis sem dignissim semper lectus parturient"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__d0Rwg
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vOfEj
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aFjgC
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__q61Vl
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__rRcSb
                          )}
                          description={
                            "Condimentum diam a et sapien praesent potenti torquent a eros"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cLa7M
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gvzlP
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wlFZh
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__h36D1
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={"PRO"}
                    primary={true}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column___8Vtlq)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zVrzz
                        )}
                      >
                        {"Buy team"}
                      </div>
                    }
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatLeft"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___5Bq94
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ayPz
                          )}
                          description={"Ad nam curae a potenti platea"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dYmmu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__bgH3T
                          )}
                          description={
                            "A adipiscing scelerisque pretium consectetur sem"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ynbZ6
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"10"}
                    label={"Team"}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </Section>
          {true ? (
            <Section
              data-plasmic-name={"shopBannersSection"}
              data-plasmic-override={overrides.shopBannersSection}
              className={classNames("__wab_instance", sty.shopBannersSection)}
              size={"fullContentWidth" as const}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__f9MMg)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__k4LJp)}
                  image={{
                    src: sunglassesMalePSac31GJqn,
                    fullWidth: 2851,
                    fullHeight: 1900,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zZK2
                        )}
                      >
                        {"Sunglasses Collection"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nMtt
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>
                      <Button
                        color={"link" as const}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jq2Wz
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2Anjs
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__p9PAs)}
                >
                  <Banner
                    className={classNames("__wab_instance", sty.banner___535Ot)}
                    image={{
                      src: sneakersUmDead0NoOka,
                      fullWidth: 2850,
                      fullHeight: 1900,
                      aspectRatio: undefined
                    }}
                    left={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oFqfs
                          )}
                        >
                          {"Sneakers\nCollection"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fztpK
                          )}
                        >
                          {"Get 25% off on selected items"}
                        </div>
                        <Button
                          color={"link" as const}
                          endIcon={
                            <ChevronRightIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wkTab
                              )}
                              role={"img"}
                            />
                          }
                          flat={true}
                          showEndIcon={true}
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___93Mli
                            )}
                          >
                            {"Go to collection"}
                          </div>
                        </Button>
                      </React.Fragment>
                    }
                  />

                  <Banner
                    className={classNames("__wab_instance", sty.banner__fbxHn)}
                    image={{
                      src: shirtWoman3YnJbWpxEzL,
                      fullWidth: 1834,
                      fullHeight: 2751,
                      aspectRatio: undefined
                    }}
                    left={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__b49JK
                          )}
                        >
                          {"Shirts\nCollection"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__h12My
                          )}
                        >
                          {"Get 25% off on selected items"}
                        </div>
                        <Button
                          color={"link" as const}
                          endIcon={
                            <ChevronRightIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___6VkJo
                              )}
                              role={"img"}
                            />
                          }
                          flat={true}
                          showEndIcon={true}
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vpr4
                            )}
                          >
                            {"Go to collection"}
                          </div>
                        </Button>
                      </React.Fragment>
                    }
                  />
                </p.Stack>
              </p.Stack>
            </Section>
          ) : null}
          <Section
            data-plasmic-name={"logoCloudSection"}
            data-plasmic-override={overrides.logoCloudSection}
            className={classNames("__wab_instance", sty.logoCloudSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oY4T4)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___15Ban)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: loomPsWcmqGSzqPo,
                  fullWidth: 300,
                  fullHeight: 91,
                  aspectRatio: 3.303226
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__ifjnj)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: strapiYJ6AhZetDe4I,
                  fullWidth: 300,
                  fullHeight: 78,
                  aspectRatio: 3.849624
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__p4P8Z)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: segmentVFaiqnQ2Lezp,
                  fullWidth: 300,
                  fullHeight: 62,
                  aspectRatio: 4.87619
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__dHgAq)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: xstateWSdK4O0Vyr7G,
                  fullWidth: 300,
                  fullHeight: 94,
                  aspectRatio: 3.2
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__qaVf7)}
                displayHeight={"48px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                src={{
                  src: mapboxQJ6T6Op9Vp,
                  fullWidth: 300,
                  fullHeight: 67,
                  aspectRatio: 4.491228
                }}
              />
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"testimonialsSection"}
            data-plasmic-override={overrides.testimonialsSection}
            background={"gray" as const}
            className={classNames("__wab_instance", sty.testimonialsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__f4H1B)}
            >
              <div className={classNames(projectcss.all, sty.column__xlYBl)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__qXWiy
                  )}
                  image={{
                    src: tracyBJsx85Sjv1Sz,
                    fullWidth: 500,
                    fullHeight: 500,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__uj2Sp)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial___439Nk
                  )}
                  image={{
                    src: elaineB1QDr7KvUtmZ,
                    fullWidth: 460,
                    fullHeight: 280,
                    aspectRatio: undefined
                  }}
                  name={"Elaine Benes"}
                  quote={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3GWji
                        )}
                      >
                        {'"Vestibulum lacinia varius habitant dis aenean.'}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qFMj6
                        )}
                      >
                        {
                          'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                        }
                      </div>
                    </React.Fragment>
                  }
                  title={"Editor, Pendant Publishing"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__apjLn)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial___0QLeJ
                  )}
                  image={{
                    src: louis73UP9Acqub1S,
                    fullWidth: 2249,
                    fullHeight: 3000,
                    aspectRatio: undefined
                  }}
                  name={"Louis Huang"}
                  quote={
                    '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h3Z2
                      )}
                    >
                      {"Restaurant Owner, Cattleman's Ranch"}
                    </div>
                  }
                />
              </div>
            </p.Stack>
          </Section>
          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: meetingLCnVq1RadFw,
              fullWidth: 2916,
              fullHeight: 1787,
              aspectRatio: undefined
            }}
          />

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "h3",
    "signUpPrompt",
    "valuePropsSection",
    "checkpointsSection",
    "pricingSection",
    "shopBannersSection",
    "logoCloudSection",
    "testimonialsSection",
    "callToActionSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar", "h3", "signUpPrompt"],
  navbar: ["navbar"],
  h3: ["h3"],
  signUpPrompt: ["signUpPrompt"],
  valuePropsSection: ["valuePropsSection"],
  checkpointsSection: ["checkpointsSection"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection"],
  logoCloudSection: ["logoCloudSection"],
  testimonialsSection: ["testimonialsSection"],
  callToActionSection: ["callToActionSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  h3: "h3";
  signUpPrompt: typeof SignUpPrompt;
  valuePropsSection: typeof Section;
  checkpointsSection: typeof Section;
  pricingSection: typeof Section;
  shopBannersSection: typeof Section;
  logoCloudSection: typeof Section;
  testimonialsSection: typeof Section;
  callToActionSection: typeof CallToActionSection;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    h3: makeNodeComponent("h3"),
    signUpPrompt: makeNodeComponent("signUpPrompt"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    checkpointsSection: makeNodeComponent("checkpointsSection"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    logoCloudSection: makeNodeComponent("logoCloudSection"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
